"use client";
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import { useGLTF, Edges } from "@react-three/drei";
import { useRef, useState, useEffect } from "react";
import { useFrame } from "@react-three/fiber";
import { useTheme } from "next-themes";

export default function JPText(props) {
  const { nodes, materials } = useGLTF("/jp.glb");
  const modelRef = useRef(null);
  const { systemTheme, theme, setTheme } = useTheme();
  const [hovered, setIsHovered] = useState(false);

  useFrame(({ mouse, viewport }) => {
    const x = ((mouse.x * viewport.width) / 20) * -1;
    const y = ((mouse.y * viewport.height) / 20) * -1;
    if (props.isHovered) {
      modelRef.current.lookAt(x, y, 1);
    }
    // else {
    //   // modelRef.current.rotation.x = 0;
    //   // modelRef.current.rotation.y = 0;
    //   // modelRef.current.rotation.z = 0;
    //   modelRef.current.lookAt(0, 0, 1);
    // }
  });

  return (
    <group {...props} dispose={null}>
      <group scale={0.01}>
        <mesh
          ref={modelRef}
          castShadow
          receiveShadow
          scale={1.8}
          geometry={nodes.Text.geometry}
          // material={materials["Material.002"]}
          position={[0, 0, 0]}
        >
          <meshStandardMaterial color={"#f3f4f6"} />
          {/* <meshPhongMaterial color={"#fff"} transparent opacity={1} /> */}
          <Edges scale={1} color={"black"} />
        </mesh>
      </group>
    </group>
  );
}

useGLTF.preload("/jp.glb");
