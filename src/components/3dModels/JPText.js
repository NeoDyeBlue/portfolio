"use client";
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import { useGLTF, Edges, Center } from "@react-three/drei";
import { useRef } from "react";
import { useFrame, useThree } from "@react-three/fiber";
import { useTheme } from "next-themes";
import { useSpring, animated } from "@react-spring/three";

export default function JPText(props) {
  const { nodes, materials } = useGLTF("/jp.glb");
  const modelRef = useRef(null);

  const { theme } = useTheme();

  const [springs, api] = useSpring(
    () => ({
      rotation: [0, 0, 0],
    }),
    []
  );

  useFrame(({ mouse, viewport }) => {
    const x = (mouse.x * viewport.width) / 15;
    const y = (mouse.y * viewport.height) / 15;
    if (props.isHovered) {
      api.start({
        rotation: [x, y, 0],
      });
    } else {
      api.start({
        rotation: [0, 0, 0],
      });
    }
  });

  return (
    <group {...props} dispose={null}>
      <group scale={0.01}>
        <Center>
          <animated.mesh
            ref={modelRef}
            castShadow
            receiveShadow
            scale={2}
            geometry={nodes.Text.geometry}
            // material={materials["Material.002"]}
            rotation={springs.rotation.to((x, y) => [x, y, 0])}
            position={[0, 0, 0]}
          >
            <meshStandardMaterial
              color={theme == "dark" ? "#1a1a1a" : "#f3f4f6"}
            />
            {/* <meshPhongMaterial color={"#fff"} transparent opacity={0} /> */}
            <Edges scale={1} color={theme == "dark" ? "#fafafa" : "#050505"} />
          </animated.mesh>
        </Center>
      </group>
    </group>
  );
}

useGLTF.preload("/jp.glb");
