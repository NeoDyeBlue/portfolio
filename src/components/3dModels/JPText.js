"use client";
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import { useGLTF, Edges } from "@react-three/drei";
import { useRef } from "react";
import { useFrame, useThree } from "@react-three/fiber";
import { useTheme } from "next-themes";
import { useSpring, animated } from "@react-spring/three";

export default function JPText(props) {
  const { nodes, materials } = useGLTF("/jp.glb");
  const modelRef = useRef(null);

  const [springs, api] = useSpring(
    () => ({
      rotation: [0, 0, 0],
    }),
    []
  );

  useFrame(({ mouse, viewport }) => {
    const x = (mouse.x * viewport.width) / 15;
    const y = (mouse.y * viewport.height) / 15;
    if (props.isHovered) {
      api.start({
        rotation: [x, y, 0],
      });
    } else {
      api.start({
        rotation: [0, 0, 0],
      });
    }
  });

  return (
    <group
      {...props}
      dispose={null}
      onPointerOver={() => setIsHovered(true)}
      onPointerOut={() => setIsHovered(false)}
    >
      <group scale={0.01}>
        <animated.mesh
          ref={modelRef}
          castShadow
          receiveShadow
          scale={1.8}
          geometry={nodes.Text.geometry}
          // material={materials["Material.002"]}
          rotation={springs.rotation.to((x, y) => [x, y, 0])}
          position={[0, 0, 0]}
        >
          <meshStandardMaterial color={"#f3f4f6"} />
          {/* <meshPhongMaterial color={"#fff"} transparent opacity={1} /> */}
          <Edges scale={1} color={"black"} />
        </animated.mesh>
      </group>
    </group>
  );
}

useGLTF.preload("/jp.glb");
